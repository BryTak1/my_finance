{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bryce\\\\my_finance\\\\frontend\\\\src\\\\DataFetcher.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './DataFetcher.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataFetcher = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [filterType, setFilterType] = useState(\"dateRange\");\n  const [dateRange, setDateRange] = useState({\n    start: '',\n    end: ''\n  });\n  const [revenueRange, setRevenueRange] = useState({\n    min: '',\n    max: ''\n  });\n  const [netIncomeRange, setNetIncomeRange] = useState({\n    min: '',\n    max: ''\n  });\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: null\n  });\n  const fetchData = async () => {\n    try {\n      const params = new URLSearchParams();\n      if (filterType === \"dateRange\") {\n        params.append(\"startYear\", dateRange.start);\n        params.append(\"endYear\", dateRange.end);\n      } else if (filterType === \"revenueRange\") {\n        params.append(\"minRevenue\", revenueRange.min);\n        params.append(\"maxRevenue\", revenueRange.max);\n      } else if (filterType === \"netIncomeRange\") {\n        params.append(\"minNetIncome\", netIncomeRange.min);\n        params.append(\"maxNetIncome\", netIncomeRange.max);\n      }\n      const response = await fetch(`http://localhost:5000/api/data?${params.toString()}`);\n      const result = await response.json();\n      setData(result);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Sorting logic\n  const sortData = key => {\n    let direction = 'descending';\n    if (sortConfig.key === key && sortConfig.direction === 'descending') {\n      direction = 'ascending';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n    const sortedData = [...data].sort((a, b) => {\n      if (a[key] < b[key]) {\n        return direction === 'ascending' ? -1 : 1;\n      }\n      if (a[key] > b[key]) {\n        return direction === 'ascending' ? 1 : -1;\n      }\n      return 0;\n    });\n    setData(sortedData);\n  };\n\n  // Helper to get arrow for sorting direction\n  const getSortArrow = key => {\n    if (sortConfig.key === key) {\n      return sortConfig.direction === 'ascending' ? '▲' : '▼';\n    }\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Apple Income Statements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"input\",\n        value: filterType,\n        onChange: e => setFilterType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dateRange\",\n          children: \"Date Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"revenueRange\",\n          children: \"Revenue Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"netIncomeRange\",\n          children: \"Net Income Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), filterType === \"dateRange\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"input\",\n          placeholder: \"Start Year\",\n          value: dateRange.start,\n          onChange: e => setDateRange({\n            ...dateRange,\n            start: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"input\",\n          placeholder: \"End Year\",\n          value: dateRange.end,\n          onChange: e => setDateRange({\n            ...dateRange,\n            end: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), filterType === \"revenueRange\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"input\",\n          placeholder: \"Min Revenue\",\n          value: revenueRange.min,\n          onChange: e => setRevenueRange({\n            ...revenueRange,\n            min: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"input\",\n          placeholder: \"Max Revenue\",\n          value: revenueRange.max,\n          onChange: e => setRevenueRange({\n            ...revenueRange,\n            max: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), filterType === \"netIncomeRange\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"input\",\n          placeholder: \"Min Net Income\",\n          value: netIncomeRange.min,\n          onChange: e => setNetIncomeRange({\n            ...netIncomeRange,\n            min: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"input\",\n          placeholder: \"Max Net Income\",\n          value: netIncomeRange.max,\n          onChange: e => setNetIncomeRange({\n            ...netIncomeRange,\n            max: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: fetchData,\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), data.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => sortData('date'),\n              children: [\"Date \", getSortArrow('date')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => sortData('revenue'),\n              children: [\"Revenue \", getSortArrow('revenue')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => sortData('netIncome'),\n              children: [\"Net Income \", getSortArrow('netIncome')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Gross Profit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"EPS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Operating Income\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [(item.revenue / 1e9).toFixed(2), \" Billion\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [(item.netIncome / 1e9).toFixed(2), \" Billion\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [(item.grossProfit / 1e9).toFixed(2), \" Billion\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.eps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [(item.operatingIncome / 1e9).toFixed(2), \" Billion\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(DataFetcher, \"ImIqO8YDGrrLVSOWlJEdOfSelY8=\");\n_c = DataFetcher;\nexport default DataFetcher;\nvar _c;\n$RefreshReg$(_c, \"DataFetcher\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DataFetcher","_s","data","setData","filterType","setFilterType","dateRange","setDateRange","start","end","revenueRange","setRevenueRange","min","max","netIncomeRange","setNetIncomeRange","sortConfig","setSortConfig","key","direction","fetchData","params","URLSearchParams","append","response","fetch","toString","result","json","error","console","sortData","sortedData","sort","a","b","getSortArrow","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","placeholder","onClick","length","map","item","index","date","revenue","toFixed","netIncome","grossProfit","eps","operatingIncome","_c","$RefreshReg$"],"sources":["C:/Users/Bryce/my_finance/frontend/src/DataFetcher.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './DataFetcher.css'; // Import the CSS file\r\n\r\nconst DataFetcher = () => {\r\n  const [data, setData] = useState([]);\r\n  const [filterType, setFilterType] = useState(\"dateRange\");\r\n  const [dateRange, setDateRange] = useState({ start: '', end: '' });\r\n  const [revenueRange, setRevenueRange] = useState({ min: '', max: '' });\r\n  const [netIncomeRange, setNetIncomeRange] = useState({ min: '', max: '' });\r\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: null });\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const params = new URLSearchParams();\r\n      if (filterType === \"dateRange\") {\r\n        params.append(\"startYear\", dateRange.start);\r\n        params.append(\"endYear\", dateRange.end);\r\n      } else if (filterType === \"revenueRange\") {\r\n        params.append(\"minRevenue\", revenueRange.min);\r\n        params.append(\"maxRevenue\", revenueRange.max);\r\n      } else if (filterType === \"netIncomeRange\") {\r\n        params.append(\"minNetIncome\", netIncomeRange.min);\r\n        params.append(\"maxNetIncome\", netIncomeRange.max);\r\n      }\r\n\r\n      const response = await fetch(`http://localhost:5000/api/data?${params.toString()}`);\r\n      const result = await response.json();\r\n      setData(result);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Sorting logic\r\n  const sortData = (key) => {\r\n    let direction = 'descending';\r\n    if (sortConfig.key === key && sortConfig.direction === 'descending') {\r\n      direction = 'ascending';\r\n    }\r\n    setSortConfig({ key, direction });\r\n\r\n    const sortedData = [...data].sort((a, b) => {\r\n      if (a[key] < b[key]) {\r\n        return direction === 'ascending' ? -1 : 1;\r\n      }\r\n      if (a[key] > b[key]) {\r\n        return direction === 'ascending' ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    setData(sortedData);\r\n  };\r\n\r\n  // Helper to get arrow for sorting direction\r\n  const getSortArrow = (key) => {\r\n    if (sortConfig.key === key) {\r\n      return sortConfig.direction === 'ascending' ? '▲' : '▼';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">Apple Income Statements</h1>\r\n      <div className=\"input-group\">\r\n        <select\r\n          className=\"input\"\r\n          value={filterType}\r\n          onChange={(e) => setFilterType(e.target.value)}\r\n        >\r\n          <option value=\"dateRange\">Date Range</option>\r\n          <option value=\"revenueRange\">Revenue Range</option>\r\n          <option value=\"netIncomeRange\">Net Income Range</option>\r\n        </select>\r\n\r\n        {filterType === \"dateRange\" && (\r\n          <div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"input\"\r\n              placeholder=\"Start Year\"\r\n              value={dateRange.start}\r\n              onChange={(e) => setDateRange({ ...dateRange, start: e.target.value })}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              className=\"input\"\r\n              placeholder=\"End Year\"\r\n              value={dateRange.end}\r\n              onChange={(e) => setDateRange({ ...dateRange, end: e.target.value })}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {filterType === \"revenueRange\" && (\r\n          <div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"input\"\r\n              placeholder=\"Min Revenue\"\r\n              value={revenueRange.min}\r\n              onChange={(e) => setRevenueRange({ ...revenueRange, min: e.target.value })}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              className=\"input\"\r\n              placeholder=\"Max Revenue\"\r\n              value={revenueRange.max}\r\n              onChange={(e) => setRevenueRange({ ...revenueRange, max: e.target.value })}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {filterType === \"netIncomeRange\" && (\r\n          <div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"input\"\r\n              placeholder=\"Min Net Income\"\r\n              value={netIncomeRange.min}\r\n              onChange={(e) => setNetIncomeRange({ ...netIncomeRange, min: e.target.value })}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              className=\"input\"\r\n              placeholder=\"Max Net Income\"\r\n              value={netIncomeRange.max}\r\n              onChange={(e) => setNetIncomeRange({ ...netIncomeRange, max: e.target.value })}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <button className=\"button\" onClick={fetchData}>\r\n          Filter\r\n        </button>\r\n      </div>\r\n\r\n      {data.length > 0 ? (\r\n        <div className=\"table-container\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th onClick={() => sortData('date')}>\r\n                  Date {getSortArrow('date')}\r\n                </th>\r\n                <th onClick={() => sortData('revenue')}>\r\n                  Revenue {getSortArrow('revenue')}\r\n                </th>\r\n                <th onClick={() => sortData('netIncome')}>\r\n                  Net Income {getSortArrow('netIncome')}\r\n                </th>\r\n                <th>Gross Profit</th>\r\n                <th>EPS</th>\r\n                <th>Operating Income</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((item, index) => (\r\n                <tr key={index}>\r\n                  <td>{item.date}</td>\r\n                  <td>{(item.revenue / 1e9).toFixed(2)} Billion</td>\r\n                  <td>{(item.netIncome / 1e9).toFixed(2)} Billion</td>\r\n                  <td>{(item.grossProfit / 1e9).toFixed(2)} Billion</td>\r\n                  <td>{item.eps}</td>\r\n                  <td>{(item.operatingIncome / 1e9).toFixed(2)} Billion</td>\r\n                </tr>\r\n              ))}\r\n          </tbody>  \r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <p>No data found</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataFetcher;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}